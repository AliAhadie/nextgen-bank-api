services:
  web:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./app/:/app

    command: python manage.py runserver 0.0.0.0:8000

    restart: always
    env_file:
      - ./app/dev.env
    depends_on:
      - db
      - redis
      - rabbitmq
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
      - "6380:6380"
    


  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
      RABBITMQ_DEFAULT_VHOST: /

  celery_worker_1:
    build: .
    container_name: celery_worker_1
    volumes:
      - ./app:/app/
    command: celery -A app worker -Q q.email.tasks --hostname=celery_worker_1@%h -B --loglevel=info
    env_file:
      - ./app/dev.env

    depends_on:
      - rabbitmq
      - db
      - web
  flower:
    image: mher/flower
    container_name: flower
    ports:
      - "5555:5555"
    environment:
      CELERY_BROKER_URL: amqp://admin:admin@rabbitmq:5672//
    depends_on:
      - rabbitmq
    restart: always
  mailpit:
    image: axllent/mailpit
    ports:
      - "8025:8025"
      - "1025:1025"
    restart: always


volumes:
  db_data: